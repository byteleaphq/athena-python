"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ...models.components import chat as components_chat
from ...models.components import httpmetadata as components_httpmetadata
from athenacopilotsdk import utils
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from typing import Dict, List, Optional


class Integration(str, Enum):
    r"""The integration to use for the chat"""
    FILES = 'files'
    DATA_WAREHOUSE = 'data-warehouse'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateNewChatRequestBody:
    brain_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('brain_id') }})
    r"""The ID of the brain to associate with the chat"""
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""The name of the chat"""
    integration: Optional[Integration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('integration'), 'exclude': lambda f: f is None }})
    r"""The integration to use for the chat"""
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateNewChatResponse:
    http_meta: components_httpmetadata.HTTPMetadata = dataclasses.field(metadata={'dataclasses_json': { 'exclude': lambda f: True }})
    headers: Dict[str, List[str]] = dataclasses.field()
    chats: Optional[List[components_chat.Chat]] = dataclasses.field(default=None)
    r"""OK"""
    

