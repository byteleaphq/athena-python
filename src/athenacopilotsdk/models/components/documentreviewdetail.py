"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from athenacopilotsdk import utils
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from typing import Optional


class ActiveReadingModel(str, Enum):
    GPT_3_5_TURBO = 'gpt-3.5-turbo'
    CLAUDE_3_HAIKU = 'claude-3-haiku'
    MIXTRAL = 'mixtral'


class FinalReviewModel(str, Enum):
    GPT_3_5_TURBO = 'gpt-3.5-turbo'
    GPT_4 = 'gpt-4'
    CLAUDE_INSTANT_1 = 'claude-instant-1'
    CLAUDE_2 = 'claude-2'
    CLAUDE_3_HAIKU = 'claude-3-haiku'
    CLAUDE_3_SONNET = 'claude-3-sonnet'
    CLAUDE_3_OPUS = 'claude-3-opus'
    MIXTRAL = 'mixtral'
    MISTRAL_SMALL = 'mistral-small'
    MISTRAL_MEDIUM = 'mistral-medium'
    MISTRAL_LARGE = 'mistral-large'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DocumentReviewDetail:
    active_reading_model: Optional[ActiveReadingModel] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('active_reading_model'), 'exclude': lambda f: f is None }})
    brain_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('brain_id'), 'exclude': lambda f: f is None }})
    created_on: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created_on'), 'exclude': lambda f: f is None }})
    doc_review_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('doc_review_id'), 'exclude': lambda f: f is None }})
    document_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('document_id'), 'exclude': lambda f: f is None }})
    final_review_model: Optional[FinalReviewModel] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('final_review_model'), 'exclude': lambda f: f is None }})
    id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    prompt: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('prompt'), 'exclude': lambda f: f is None }})
    review: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('review'), 'exclude': lambda f: f is None }})
    title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title'), 'exclude': lambda f: f is None }})
    

