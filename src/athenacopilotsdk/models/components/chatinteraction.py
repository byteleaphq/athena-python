"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from .document import Document
from athenacopilotsdk import utils
from dataclasses_json import Undefined, dataclass_json
from typing import List, Optional, Union


@dataclasses.dataclass
class DwData:
    r"""The data related to the data warehouse integration"""
    



@dataclasses.dataclass
class Metadata:
    r"""The metadata associated with the interaction"""
    



@dataclasses.dataclass
class Two:
    pass


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ChatInteraction:
    UNSET='__SPEAKEASY_UNSET__'
    actor: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('actor'), 'exclude': lambda f: f is None }})
    r"""The actor (USER or AI) of the interaction"""
    created_at: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created_at'), 'exclude': lambda f: f is None }})
    r"""The timestamp when the interaction was created"""
    dw_data: Optional[DwData] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dw_data'), 'exclude': lambda f: f is ChatInteraction.UNSET }})
    r"""The data related to the data warehouse integration"""
    id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""The unique identifier of the interaction"""
    message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message'), 'exclude': lambda f: f is None }})
    r"""The message content of the interaction"""
    metadata: Optional[Metadata] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metadata'), 'exclude': lambda f: f is ChatInteraction.UNSET }})
    r"""The metadata associated with the interaction"""
    model: Optional[str] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('model'), 'exclude': lambda f: f is ChatInteraction.UNSET }})
    r"""The name of the model used for the interaction"""
    reference: Optional[List[Reference]] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reference'), 'exclude': lambda f: f is ChatInteraction.UNSET }})
    r"""The list of references associated with the interaction"""
    thread_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('thread_id'), 'exclude': lambda f: f is None }})
    r"""The ID of the chat thread associated with the interaction"""
    timestamp: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timestamp'), 'exclude': lambda f: f is None }})
    r"""The timestamp when the interaction occurred"""
    user_credits: Optional[int] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('user_credits'), 'exclude': lambda f: f is ChatInteraction.UNSET }})
    r"""The number of credits used by the user for the interaction"""
    


Reference = Union[Document, Two]
